{"ast":null,"code":"import _classCallCheck from \"/Users/vehbi/Work/REACT/handy-procrastinator/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/vehbi/Work/REACT/handy-procrastinator/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/vehbi/Work/REACT/handy-procrastinator/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/vehbi/Work/REACT/handy-procrastinator/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"/Users/vehbi/Work/REACT/handy-procrastinator/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/Users/vehbi/Work/REACT/handy-procrastinator/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/vehbi/Work/REACT/handy-procrastinator/src/components/Home.js\";\n\nvar React = require('react');\n\nvar PropTypes = require('prop-types');\n\nvar api = require('../utils/api');\n\nfunction SelectLanguage(props) {\n  var languages = ['All', 'JavaScript', 'Ruby', 'Java', 'CSS', 'Python'];\n  return React.createElement(\"ul\", {\n    className: \"languages\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }, languages.map(function (lang) {\n    return React.createElement(\"li\", {\n      style: lang === props.selectedLanguage ? {\n        color: '#d0021b'\n      } : null,\n      onClick: props.onSelect.bind(null, lang),\n      key: lang,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11\n      },\n      __self: this\n    }, lang);\n  }));\n}\n\nfunction RepoGrid(props) {\n  return React.createElement(\"ul\", {\n    className: \"popular-list\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, props.repos.map(function (repo, index) {\n    return React.createElement(\"li\", {\n      key: repo.name,\n      className: \"popular-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"popular-rank\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, \"#\", index + 1), React.createElement(\"ul\", {\n      className: \"space-list-items\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      className: \"avatar\",\n      src: repo.owner.avatar_url,\n      alt: 'Avatar for ' + repo.owner.login,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    })), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      href: repo.html_url,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, repo.name)), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, \"@\", repo.owner.login), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, repo.stargazers_count, \" stars\")));\n  }));\n}\n\nRepoGrid.propTypes = {\n  repos: PropTypes.array.isRequired\n};\nSelectLanguage.propTypes = {\n  selectedLanguage: PropTypes.string.isRequired,\n  onSelect: PropTypes.func.isRequired\n};\n\nvar Popular =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Popular, _React$Component);\n\n  function Popular(props) {\n    var _this;\n\n    _classCallCheck(this, Popular);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Popular).call(this));\n    _this.state = {\n      selectedLanguage: 'All',\n      repos: null\n    };\n    _this.updateLanguage = _this.updateLanguage.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(Popular, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.updateLanguage(this.state.selectedLanguage);\n    }\n  }, {\n    key: \"updateLanguage\",\n    value: function updateLanguage(lang) {\n      this.setState(function () {\n        return {\n          selectedLanguage: lang,\n          repos: null\n        };\n      });\n      api.fetchPopularRepos(lang).then(function (repos) {\n        this.setState(function () {\n          return {\n            repos: repos\n          };\n        });\n      }.bind(this));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, React.createElement(SelectLanguage, {\n        selectedLanguage: this.state.selectedLanguage,\n        onSelect: this.updateLanguage,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }), !this.state.repos ? React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, \"LOADING!\") : React.createElement(RepoGrid, {\n        repos: this.state.repos,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Popular;\n}(React.Component);\n\nexport default Popular;","map":{"version":3,"sources":["/Users/vehbi/Work/REACT/handy-procrastinator/src/components/Home.js"],"names":["React","require","PropTypes","api","SelectLanguage","props","languages","map","lang","selectedLanguage","color","onSelect","bind","RepoGrid","repos","repo","index","name","owner","avatar_url","login","html_url","stargazers_count","propTypes","array","isRequired","string","func","Popular","state","updateLanguage","setState","fetchPopularRepos","then","Component"],"mappings":"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","sourcesContent":["var React = require('react');\nvar PropTypes = require('prop-types');\nvar api = require('../utils/api');\n\nfunction SelectLanguage (props) {\n  var languages = ['All', 'JavaScript', 'Ruby', 'Java', 'CSS', 'Python'];\n  return (\n    <ul className='languages'>\n      {languages.map(function (lang) {\n        return (\n          <li\n            style={lang === props.selectedLanguage ? {color: '#d0021b'} : null}\n            onClick={props.onSelect.bind(null, lang)}\n            key={lang}>\n              {lang}\n          </li>\n        )\n      })}\n    </ul>\n  )\n}\n\n\nfunction RepoGrid (props) {\n  return (\n    <ul className='popular-list'>\n      {props.repos.map(function (repo, index) {\n        return (\n          <li key={repo.name} className='popular-item'>\n            <div className='popular-rank'>#{index + 1}</div>\n            <ul className='space-list-items'>\n              <li>\n                <img\n                  className='avatar'\n                  src={repo.owner.avatar_url}\n                  alt={'Avatar for ' + repo.owner.login}\n                />\n              </li>\n              <li><a href={repo.html_url}>{repo.name}</a></li>\n              <li>@{repo.owner.login}</li>\n              <li>{repo.stargazers_count} stars</li>\n            </ul>\n          </li>\n        )\n      })}\n    </ul>\n  )\n}\n\nRepoGrid.propTypes = {\n  repos: PropTypes.array.isRequired,\n}\n\nSelectLanguage.propTypes = {\n  selectedLanguage: PropTypes.string.isRequired,\n  onSelect: PropTypes.func.isRequired,\n};\n\nclass Popular extends React.Component {\n  constructor(props) {\n    super();\n    this.state = {\n      selectedLanguage: 'All',\n      repos: null,\n    };\n\n    this.updateLanguage = this.updateLanguage.bind(this);\n  }\n  componentDidMount() {\n    this.updateLanguage(this.state.selectedLanguage)\n  }\n  updateLanguage(lang) {\n    this.setState(function () {\n      return {\n        selectedLanguage: lang,\n        repos: null\n      }\n    });\n\n    api.fetchPopularRepos(lang)\n      .then(function (repos) {\n        this.setState(function () {\n          return {\n            repos: repos\n          }\n        });\n      }.bind(this));\n  }\n  render() {\n    return (\n      <div>\n        <SelectLanguage\n          selectedLanguage={this.state.selectedLanguage}\n          onSelect={this.updateLanguage} />\n        {!this.state.repos\n          ? <p>LOADING!</p>\n          : <RepoGrid repos={this.state.repos} />}\n      </div>\n    )\n  }\n}\n\nexport default Popular;\n"]},"metadata":{},"sourceType":"module"}